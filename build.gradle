buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "https://files.minecraftforge.net/maven"
        }
        maven {
            name = "SpongePowered"
            url = "http://repo.spongepowered.org/maven"
        }
    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT"
        classpath "org.spongepowered:mixingradle:0.6-SNAPSHOT"
        classpath "com.github.jengelman.gradle.plugins:shadow:1.2.3"
    }
}


apply plugin: "net.minecraftforge.gradle.forge"
apply plugin: "org.spongepowered.mixin"
apply plugin: "com.github.johnrengelman.shadow"

version = modVersion
group = modGroup
archivesBaseName = modBaseName

minecraft {
    version = project.forgeVersion
    runDir = "run"
    mappings = project.mcpVersion
    makeObfSourceJar = false
}

repositories {
    maven {
        name = "spongepowered-repo"
        url = "http://repo.spongepowered.org/maven/"
    }
    mavenCentral()
    jcenter()
}

dependencies {
    compile("org.spongepowered:mixin:0.7.4-SNAPSHOT") {
        exclude module: "launchwrapper"
        exclude module: "guava"
        exclude module: "gson"
        exclude module: "commons-io"
    }
    compile "club.minnced:java-discord-rpc:2.0.2"
}

jar {
    manifest {
        attributes(
                "MixinConfigs": "mixins.xanax.json",
                "TweakClass": "org.spongepowered.asm.launch.MixinTweaker",
                "FMLCorePluginContainsFMLMod": "true",
                "FMLCorePlugin": "cat.yoink.xanax.core.EntryPoint",
                "ForceLoadAsMod": "true",
                "FMLAT": "xanax_at.cfg"
        )
    }
}

mixin {
    defaultObfuscationEnv searge
    add sourceSets.main, "mixins.xanax.refmap.json"
}

reobf {
    shadowJar {
        mappingType = "SEARGE"
        classpath = sourceSets.main.compileClasspath
    }
}

shadowJar {
    dependencies {
        include(dependency("org.spongepowered:mixin"))
        include(dependency("club.minnced:java-discord-rpc"))
    }
    exclude "dummyThing"
    exclude "LICENSE.txt"
    classifier = "release"
}

task clientJar(type: Jar, dependsOn: jar) {
    from(zipTree(shadowJar.archivePath)) {
        include "cat/yoink/xanax/main/**"
    }
    baseName = ""
    version = ""
    classifier = "client"
}

task loaderJar(type: Jar, dependsOn: shadowJar) {
    from(zipTree(shadowJar.archivePath)) {
        exclude "cat/yoink/xanax/main/**"
    }
    baseName = ""
    version = ""
    classifier = "loader"
    manifest = jar.manifest
}

build.dependsOn(clientJar, loaderJar)

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"
        expand "version": project.version, "mcversion": project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "mcmod.info"
    }
}

sourceSets {
    main.java.srcDirs = ["src/main/java"]
    main.resources.srcDirs = ["src/main/resources"]
}

task copyDeps(type: Copy) {
    from configurations.runtime
    into "build/lib"
}